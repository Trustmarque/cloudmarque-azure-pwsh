trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  major: 0
  minor: 0
  version: $(major).$(minor).$(Build.BuildNumber)
  module: Cloudmarque.Azure

stages:

- stage: 'Build'
  displayName: 'Build artifact'
  jobs:
  - job: Build
    displayName: 'Build Cloudmarque.Azure Artifact'
    steps:
    - task: NuGetToolInstaller@1
      displayName: Install NuGet
      inputs:
        versionSpec:
    - task: PowerShell@2
      displayName: Build
      inputs:
        targetType: inline
        workingDirectory: $(Build.SourcesDirectory)
        script: |
          . .\init.ps1
          Build-CloudmarqueAzure -Version "$(version)" -Suffix "$(PackageSuffix)"
    - upload: publish/pkg/
      displayName: 'Publish nuget artifact'
      artifact: pkg

- stage: 'Test'
  dependsOn: Build
  displayName: 'Test cloudmarque.azure module'
  jobs:
  - job: Test
    displayName: 'Testing repository and artifact'
    steps:
    - download: current
      displayName: 'Download nuget artifact'
      name: pkg
    - task: NuGetToolInstaller@1
      displayName: Install NuGet
      inputs:
        versionSpec:
    - task: PowerShell@2
      displayName: Test
      inputs:
        targetType: inline
        workingDirectory: $(Build.SourcesDirectory)
        script: |
          copy-item -path "$(Pipeline.Workspace)\pkg\*" -destination "$(Build.SourcesDirectory)\" -Recurse -Verbose
          . .\init.ps1
          Test-CloudmarqueAzure
    - task: PublishTestResults@2
      displayName: Publish test results
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: publish/tests/*.xml
        failTaskOnFailedTests: true

- stage: 'Documenting'
  displayName: 'Build document artifact to be consumed by Docs pipeline'
  dependsOn: Test
  condition: |
      and(
        succeeded(),
        eq(variables['build.sourceBranch'], 'refs/heads/master')
      )
  jobs:
  - job: Documents
    displayName: 'Build document artifact'
    steps:
    - task: NuGetToolInstaller@1
      displayName: Install NuGet
      inputs:
        versionSpec:
    - task: PowerShell@2
      displayName: 'create document md files - artifact'
      inputs:
        targetType: inline
        workingDirectory: $(Build.SourcesDirectory)
        script: |
          . .\init.ps1
          New-CloudmarqueAzureDocs
    - upload: publish/docs/
      artifact: docs

- stage: 'Publish'
  displayName: 'Publish To CloudMarque.Azure'
  dependsOn: Test
  condition: |
      and(
        succeeded(),
        eq(variables['build.sourceBranch'], 'refs/heads/master')
      )
  jobs:
  - deployment: Dev
    displayName: 'Publish_artifact'
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            name: pkg
          - task: NuGetCommand@2
            displayName: 'NuGet Push'
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/pkg/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.nupkg'
              publishVstsFeed: '$(VstsFeed)'